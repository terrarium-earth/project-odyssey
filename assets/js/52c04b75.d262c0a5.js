"use strict";(self.webpackChunkterrarium_docs=self.webpackChunkterrarium_docs||[]).push([[3075],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(a),d=n,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return a?r.createElement(f,l(l({ref:t},p),{},{components:a})):r.createElement(f,l({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5391:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const o={displayed_sidebar:"argonauts"},l="Fake Player Commands",i={unversionedId:"argonauts/guilds/commands/fake-players",id:"argonauts/guilds/commands/fake-players",title:"Fake Player Commands",description:"Fake players are entities in the game that simulate player actions without actual players controlling them.",source:"@site/docs/argonauts/guilds/commands/fake-players.md",sourceDirName:"argonauts/guilds/commands",slug:"/argonauts/guilds/commands/fake-players",permalink:"/docs/argonauts/guilds/commands/fake-players",draft:!1,tags:[],version:"current",frontMatter:{displayed_sidebar:"argonauts"},sidebar:"argonauts",previous:{title:"Settings Commands",permalink:"/docs/argonauts/guilds/commands/settings"},next:{title:"Admin Commands",permalink:"/docs/argonauts/guilds/commands/admin"}},s={},u=[{value:"Add",id:"add",level:2},{value:"Remove",id:"remove",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"fake-player-commands"},"Fake Player Commands"),(0,n.kt)("p",null,"Fake players are entities in the game that simulate player actions without actual players controlling them.\nWith Cadmus installed, adding a fake player to this list will bypass claim protections for that fake player.\nThis allows them to perform their tasks without being blocked by claim protections."),(0,n.kt)("h2",{id:"add"},"Add"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"/guild fakeplayers add <uuid>\n")),(0,n.kt)("p",null,"Adds a fake player to the list of fake players. Requires the ",(0,n.kt)("inlineCode",{parentName:"p"},"Manage Members")," permission."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"uuid"),": The UUID of the fake player to add.")),(0,n.kt)("h2",{id:"remove"},"Remove"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"/guild fakeplayers remove <uuid>\n")),(0,n.kt)("p",null,"Removes a fake player from the list of fake players. Requires the ",(0,n.kt)("inlineCode",{parentName:"p"},"Manage Members")," permission."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"uuid"),": The UUID of the fake player to remove.")))}m.isMDXComponent=!0}}]);